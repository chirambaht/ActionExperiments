// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action_definitions.proto

#include "action_definitions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_action_5fdefinitions_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_action_5fdefinitions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_action_5fdefinitions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData4;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_action_5fdefinitions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ActionTimestamp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_action_5fdefinitions_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ActionDataNetworkPackage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_action_5fdefinitions_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ActionDataNetworkPackage_ActionDeviceData;
}  // namespace protobuf_action_5fdefinitions_2eproto
namespace ActionTracer {
class ActionTimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionTimestamp>
      _instance;
} _ActionTimestamp_default_instance_;
class ActionDataNetworkPackage_ActionDeviceData_ActionData1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionDataNetworkPackage_ActionDeviceData_ActionData1>
      _instance;
} _ActionDataNetworkPackage_ActionDeviceData_ActionData1_default_instance_;
class ActionDataNetworkPackage_ActionDeviceData_ActionData3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionDataNetworkPackage_ActionDeviceData_ActionData3>
      _instance;
} _ActionDataNetworkPackage_ActionDeviceData_ActionData3_default_instance_;
class ActionDataNetworkPackage_ActionDeviceData_ActionData4DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionDataNetworkPackage_ActionDeviceData_ActionData4>
      _instance;
} _ActionDataNetworkPackage_ActionDeviceData_ActionData4_default_instance_;
class ActionDataNetworkPackage_ActionDeviceDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionDataNetworkPackage_ActionDeviceData>
      _instance;
} _ActionDataNetworkPackage_ActionDeviceData_default_instance_;
class ActionDataNetworkPackageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionDataNetworkPackage>
      _instance;
} _ActionDataNetworkPackage_default_instance_;
class ActionMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionMessage>
      _instance;
} _ActionMessage_default_instance_;
}  // namespace ActionTracer
namespace protobuf_action_5fdefinitions_2eproto {
static void InitDefaultsActionTimestamp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ActionTracer::_ActionTimestamp_default_instance_;
    new (ptr) ::ActionTracer::ActionTimestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionTracer::ActionTimestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActionTimestamp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActionTimestamp}, {}};

static void InitDefaultsActionDataNetworkPackage_ActionDeviceData_ActionData1() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData1_default_instance_;
    new (ptr) ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData1 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActionDataNetworkPackage_ActionDeviceData_ActionData1}, {}};

static void InitDefaultsActionDataNetworkPackage_ActionDeviceData_ActionData3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData3_default_instance_;
    new (ptr) ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActionDataNetworkPackage_ActionDeviceData_ActionData3}, {}};

static void InitDefaultsActionDataNetworkPackage_ActionDeviceData_ActionData4() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData4_default_instance_;
    new (ptr) ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData4 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActionDataNetworkPackage_ActionDeviceData_ActionData4}, {}};

static void InitDefaultsActionDataNetworkPackage_ActionDeviceData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_default_instance_;
    new (ptr) ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ActionDataNetworkPackage_ActionDeviceData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsActionDataNetworkPackage_ActionDeviceData}, {
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData4.base,
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData3.base,}};

static void InitDefaultsActionDataNetworkPackage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ActionTracer::_ActionDataNetworkPackage_default_instance_;
    new (ptr) ::ActionTracer::ActionDataNetworkPackage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionTracer::ActionDataNetworkPackage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ActionDataNetworkPackage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsActionDataNetworkPackage}, {
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionTimestamp.base,
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData.base,}};

static void InitDefaultsActionMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ActionTracer::_ActionMessage_default_instance_;
    new (ptr) ::ActionTracer::ActionMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionTracer::ActionMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ActionMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActionMessage}, {
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ActionTimestamp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData1.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData3.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData4.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionDataNetworkPackage_ActionDeviceData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionDataNetworkPackage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionMessage.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionTimestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionTimestamp, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionTimestamp, nanos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1, x_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData, device_identifier_contents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData, quaternion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData, accelerometer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData, gyroscope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData, temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage, send_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage, packet_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionDataNetworkPackage, device_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionMessage, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionMessage, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionMessage, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionMessage, body_connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionMessage, device_connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionTracer::ActionMessage, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ActionTracer::ActionTimestamp)},
  { 7, -1, sizeof(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1)},
  { 13, -1, sizeof(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3)},
  { 21, -1, sizeof(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4)},
  { 30, -1, sizeof(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData)},
  { 41, -1, sizeof(::ActionTracer::ActionDataNetworkPackage)},
  { 49, -1, sizeof(::ActionTracer::ActionMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ActionTracer::_ActionTimestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ActionTracer::_ActionDataNetworkPackage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ActionTracer::_ActionMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "action_definitions.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030action_definitions.proto\022\014ActionTracer"
      "\"1\n\017ActionTimestamp\022\017\n\007seconds\030\001 \001(\003\022\r\n\005"
      "nanos\030\002 \001(\005\"\345\005\n\030ActionDataNetworkPackage"
      "\0220\n\tsend_time\030\001 \001(\0132\035.ActionTracer.Actio"
      "nTimestamp\022\025\n\rpacket_number\030\002 \001(\r\022L\n\013dev"
      "ice_data\030\003 \003(\01327.ActionTracer.ActionData"
      "NetworkPackage.ActionDeviceData\032\261\004\n\020Acti"
      "onDeviceData\022\"\n\032device_identifier_conten"
      "ts\030\004 \001(\r\022W\n\nquaternion\030\005 \001(\0132C.ActionTra"
      "cer.ActionDataNetworkPackage.ActionDevic"
      "eData.ActionData4\022Z\n\raccelerometer\030\006 \001(\013"
      "2C.ActionTracer.ActionDataNetworkPackage"
      ".ActionDeviceData.ActionData3\022V\n\tgyrosco"
      "pe\030\007 \001(\0132C.ActionTracer.ActionDataNetwor"
      "kPackage.ActionDeviceData.ActionData3\022\023\n"
      "\013temperature\030\010 \001(\002\022R\n\005extra\030\t \003(\0132C.Acti"
      "onTracer.ActionDataNetworkPackage.Action"
      "DeviceData.ActionData3\032\030\n\013ActionData1\022\t\n"
      "\001x\030\001 \001(\002\032.\n\013ActionData3\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030"
      "\002 \001(\002\022\t\n\001z\030\003 \001(\002\0329\n\013ActionData4\022\t\n\001w\030\001 \001"
      "(\002\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\"\215\002\n\r"
      "ActionMessage\022+\n\006action\030\001 \001(\0162\033.ActionTr"
      "acer.ActionCommand\022\014\n\004name\030\002 \001(\t\022\r\n\005para"
      "m\030\003 \001(\005\022;\n\017body_connection\030\004 \001(\0162\".Actio"
      "nTracer.ActionBodyConnection\022\?\n\021device_c"
      "onnection\030\005 \001(\0162$.ActionTracer.ActionDev"
      "iceConnection\0224\n\004data\030\006 \001(\0132&.ActionTrac"
      "er.ActionDataNetworkPackage*\203\001\n\rActionCo"
      "mmand\022\013\n\007UNKNOWN\020\000\022\t\n\005START\020\001\022\010\n\004STOP\020\002\022"
      "\013\n\007MAPPING\020\003\022\r\n\tUNMAPPING\020\004\022\017\n\013OUTPUT_RA"
      "TE\020\005\022\t\n\005RESET\020\006\022\010\n\004DATA\020\007\022\016\n\nDISCONNECT\020"
      "\010*\227\002\n\024ActionBodyConnection\022\t\n\005WAIST\020\000\022\017\n"
      "\013RIGHT_BICEP\020\001\022\021\n\rRIGHT_FOREARM\020\002\022\016\n\nRIG"
      "HT_HAND\020\003\022\016\n\nLEFT_BICEP\020\004\022\020\n\014LEFT_FOREAR"
      "M\020\005\022\r\n\tLEFT_HAND\020\006\022\t\n\005CHEST\020\007\022\010\n\004HEAD\020\010\022"
      "\017\n\013RIGHT_THIGH\020\t\022\016\n\nRIGHT_KNEE\020\n\022\016\n\nRIGH"
      "T_FOOT\020\013\022\016\n\nLEFT_THIGH\020\014\022\r\n\tLEFT_KNEE\020\r\022"
      "\r\n\tLEFT_FOOT\020\016\022\r\n\tRIGHT_HIP\020\017\022\014\n\010LEFT_HI"
      "P\020\020*\316\001\n\026ActionDeviceConnection\022\t\n\005ACT_0\020"
      "\000\022\t\n\005ACT_1\020\001\022\t\n\005ACT_2\020\002\022\t\n\005ACT_3\020\003\022\t\n\005AC"
      "T_4\020\004\022\t\n\005ACT_5\020\005\022\t\n\005ACT_6\020\006\022\t\n\005ACT_7\020\007\022\t"
      "\n\005ACT_8\020\010\022\t\n\005ACT_9\020\t\022\n\n\006ACT_10\020\n\022\n\n\006ACT_"
      "11\020\013\022\n\n\006ACT_12\020\014\022\n\n\006ACT_13\020\r\022\n\n\006ACT_14\020\016"
      "\022\n\n\006ACT_15\020\017B\017\252\002\014ActionTracerb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1757);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "action_definitions.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_action_5fdefinitions_2eproto
namespace ActionTracer {
const ::google::protobuf::EnumDescriptor* ActionCommand_descriptor() {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_5fdefinitions_2eproto::file_level_enum_descriptors[0];
}
bool ActionCommand_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ActionBodyConnection_descriptor() {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_5fdefinitions_2eproto::file_level_enum_descriptors[1];
}
bool ActionBodyConnection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ActionDeviceConnection_descriptor() {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_5fdefinitions_2eproto::file_level_enum_descriptors[2];
}
bool ActionDeviceConnection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ActionTimestamp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionTimestamp::kSecondsFieldNumber;
const int ActionTimestamp::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionTimestamp::ActionTimestamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionTimestamp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionTracer.ActionTimestamp)
}
ActionTimestamp::ActionTimestamp(const ActionTimestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  // @@protoc_insertion_point(copy_constructor:ActionTracer.ActionTimestamp)
}

void ActionTimestamp::SharedCtor() {
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
}

ActionTimestamp::~ActionTimestamp() {
  // @@protoc_insertion_point(destructor:ActionTracer.ActionTimestamp)
  SharedDtor();
}

void ActionTimestamp::SharedDtor() {
}

void ActionTimestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionTimestamp::descriptor() {
  ::protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionTimestamp& ActionTimestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_action_5fdefinitions_2eproto::scc_info_ActionTimestamp.base);
  return *internal_default_instance();
}


void ActionTimestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionTracer.ActionTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  _internal_metadata_.Clear();
}

bool ActionTimestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionTracer.ActionTimestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nanos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionTracer.ActionTimestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionTracer.ActionTimestamp)
  return false;
#undef DO_
}

void ActionTimestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionTracer.ActionTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // int32 nanos = 2;
  if (this->nanos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nanos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionTracer.ActionTimestamp)
}

::google::protobuf::uint8* ActionTimestamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActionTracer.ActionTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seconds(), target);
  }

  // int32 nanos = 2;
  if (this->nanos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nanos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionTracer.ActionTimestamp)
  return target;
}

size_t ActionTimestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionTracer.ActionTimestamp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 seconds = 1;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seconds());
  }

  // int32 nanos = 2;
  if (this->nanos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nanos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionTimestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionTracer.ActionTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionTimestamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionTimestamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionTracer.ActionTimestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionTracer.ActionTimestamp)
    MergeFrom(*source);
  }
}

void ActionTimestamp::MergeFrom(const ActionTimestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionTracer.ActionTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
  if (from.nanos() != 0) {
    set_nanos(from.nanos());
  }
}

void ActionTimestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionTracer.ActionTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionTimestamp::CopyFrom(const ActionTimestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionTracer.ActionTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionTimestamp::IsInitialized() const {
  return true;
}

void ActionTimestamp::Swap(ActionTimestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionTimestamp::InternalSwap(ActionTimestamp* other) {
  using std::swap;
  swap(seconds_, other->seconds_);
  swap(nanos_, other->nanos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionTimestamp::GetMetadata() const {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionDataNetworkPackage_ActionDeviceData_ActionData1::kXFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionDataNetworkPackage_ActionDeviceData_ActionData1::ActionDataNetworkPackage_ActionDeviceData_ActionData1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData1.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
}
ActionDataNetworkPackage_ActionDeviceData_ActionData1::ActionDataNetworkPackage_ActionDeviceData_ActionData1(const ActionDataNetworkPackage_ActionDeviceData_ActionData1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_ = from.x_;
  // @@protoc_insertion_point(copy_constructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::SharedCtor() {
  x_ = 0;
}

ActionDataNetworkPackage_ActionDeviceData_ActionData1::~ActionDataNetworkPackage_ActionDeviceData_ActionData1() {
  // @@protoc_insertion_point(destructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  SharedDtor();
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::SharedDtor() {
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionDataNetworkPackage_ActionDeviceData_ActionData1::descriptor() {
  ::protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionDataNetworkPackage_ActionDeviceData_ActionData1& ActionDataNetworkPackage_ActionDeviceData_ActionData1::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData1.base);
  return *internal_default_instance();
}


void ActionDataNetworkPackage_ActionDeviceData_ActionData1::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_ = 0;
  _internal_metadata_.Clear();
}

bool ActionDataNetworkPackage_ActionDeviceData_ActionData1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  return false;
#undef DO_
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
}

::google::protobuf::uint8* ActionDataNetworkPackage_ActionDeviceData_ActionData1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  return target;
}

size_t ActionDataNetworkPackage_ActionDeviceData_ActionData1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionDataNetworkPackage_ActionDeviceData_ActionData1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionDataNetworkPackage_ActionDeviceData_ActionData1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
    MergeFrom(*source);
  }
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::MergeFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::CopyFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionDataNetworkPackage_ActionDeviceData_ActionData1::IsInitialized() const {
  return true;
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData1::Swap(ActionDataNetworkPackage_ActionDeviceData_ActionData1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionDataNetworkPackage_ActionDeviceData_ActionData1::InternalSwap(ActionDataNetworkPackage_ActionDeviceData_ActionData1* other) {
  using std::swap;
  swap(x_, other->x_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionDataNetworkPackage_ActionDeviceData_ActionData1::GetMetadata() const {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionDataNetworkPackage_ActionDeviceData_ActionData3::kXFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData_ActionData3::kYFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData_ActionData3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionDataNetworkPackage_ActionDeviceData_ActionData3::ActionDataNetworkPackage_ActionDeviceData_ActionData3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
}
ActionDataNetworkPackage_ActionDeviceData_ActionData3::ActionDataNetworkPackage_ActionDeviceData_ActionData3(const ActionDataNetworkPackage_ActionDeviceData_ActionData3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

ActionDataNetworkPackage_ActionDeviceData_ActionData3::~ActionDataNetworkPackage_ActionDeviceData_ActionData3() {
  // @@protoc_insertion_point(destructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  SharedDtor();
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::SharedDtor() {
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionDataNetworkPackage_ActionDeviceData_ActionData3::descriptor() {
  ::protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionDataNetworkPackage_ActionDeviceData_ActionData3& ActionDataNetworkPackage_ActionDeviceData_ActionData3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData3.base);
  return *internal_default_instance();
}


void ActionDataNetworkPackage_ActionDeviceData_ActionData3::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool ActionDataNetworkPackage_ActionDeviceData_ActionData3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  return false;
#undef DO_
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
}

::google::protobuf::uint8* ActionDataNetworkPackage_ActionDeviceData_ActionData3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  return target;
}

size_t ActionDataNetworkPackage_ActionDeviceData_ActionData3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionDataNetworkPackage_ActionDeviceData_ActionData3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionDataNetworkPackage_ActionDeviceData_ActionData3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
    MergeFrom(*source);
  }
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::MergeFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::CopyFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionDataNetworkPackage_ActionDeviceData_ActionData3::IsInitialized() const {
  return true;
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData3::Swap(ActionDataNetworkPackage_ActionDeviceData_ActionData3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionDataNetworkPackage_ActionDeviceData_ActionData3::InternalSwap(ActionDataNetworkPackage_ActionDeviceData_ActionData3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionDataNetworkPackage_ActionDeviceData_ActionData3::GetMetadata() const {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionDataNetworkPackage_ActionDeviceData_ActionData4::kWFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData_ActionData4::kXFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData_ActionData4::kYFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData_ActionData4::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionDataNetworkPackage_ActionDeviceData_ActionData4::ActionDataNetworkPackage_ActionDeviceData_ActionData4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData4.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
}
ActionDataNetworkPackage_ActionDeviceData_ActionData4::ActionDataNetworkPackage_ActionDeviceData_ActionData4(const ActionDataNetworkPackage_ActionDeviceData_ActionData4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&w_, &from.w_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&w_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::SharedCtor() {
  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
}

ActionDataNetworkPackage_ActionDeviceData_ActionData4::~ActionDataNetworkPackage_ActionDeviceData_ActionData4() {
  // @@protoc_insertion_point(destructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  SharedDtor();
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::SharedDtor() {
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionDataNetworkPackage_ActionDeviceData_ActionData4::descriptor() {
  ::protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionDataNetworkPackage_ActionDeviceData_ActionData4& ActionDataNetworkPackage_ActionDeviceData_ActionData4::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData_ActionData4.base);
  return *internal_default_instance();
}


void ActionDataNetworkPackage_ActionDeviceData_ActionData4::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool ActionDataNetworkPackage_ActionDeviceData_ActionData4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float w = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  return false;
#undef DO_
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float w = 1;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->w(), output);
  }

  // float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
}

::google::protobuf::uint8* ActionDataNetworkPackage_ActionDeviceData_ActionData4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float w = 1;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->w(), target);
  }

  // float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  return target;
}

size_t ActionDataNetworkPackage_ActionDeviceData_ActionData4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float w = 1;
  if (this->w() != 0) {
    total_size += 1 + 4;
  }

  // float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionDataNetworkPackage_ActionDeviceData_ActionData4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionDataNetworkPackage_ActionDeviceData_ActionData4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
    MergeFrom(*source);
  }
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::MergeFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::CopyFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionDataNetworkPackage_ActionDeviceData_ActionData4::IsInitialized() const {
  return true;
}

void ActionDataNetworkPackage_ActionDeviceData_ActionData4::Swap(ActionDataNetworkPackage_ActionDeviceData_ActionData4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionDataNetworkPackage_ActionDeviceData_ActionData4::InternalSwap(ActionDataNetworkPackage_ActionDeviceData_ActionData4* other) {
  using std::swap;
  swap(w_, other->w_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionDataNetworkPackage_ActionDeviceData_ActionData4::GetMetadata() const {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionDataNetworkPackage_ActionDeviceData::InitAsDefaultInstance() {
  ::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_default_instance_._instance.get_mutable()->quaternion_ = const_cast< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4*>(
      ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4::internal_default_instance());
  ::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_default_instance_._instance.get_mutable()->accelerometer_ = const_cast< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3*>(
      ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3::internal_default_instance());
  ::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_default_instance_._instance.get_mutable()->gyroscope_ = const_cast< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3*>(
      ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionDataNetworkPackage_ActionDeviceData::kDeviceIdentifierContentsFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData::kQuaternionFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData::kAccelerometerFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData::kGyroscopeFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData::kTemperatureFieldNumber;
const int ActionDataNetworkPackage_ActionDeviceData::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionDataNetworkPackage_ActionDeviceData::ActionDataNetworkPackage_ActionDeviceData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
}
ActionDataNetworkPackage_ActionDeviceData::ActionDataNetworkPackage_ActionDeviceData(const ActionDataNetworkPackage_ActionDeviceData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extra_(from.extra_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_quaternion()) {
    quaternion_ = new ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4(*from.quaternion_);
  } else {
    quaternion_ = NULL;
  }
  if (from.has_accelerometer()) {
    accelerometer_ = new ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3(*from.accelerometer_);
  } else {
    accelerometer_ = NULL;
  }
  if (from.has_gyroscope()) {
    gyroscope_ = new ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3(*from.gyroscope_);
  } else {
    gyroscope_ = NULL;
  }
  ::memcpy(&device_identifier_contents_, &from.device_identifier_contents_,
    static_cast<size_t>(reinterpret_cast<char*>(&temperature_) -
    reinterpret_cast<char*>(&device_identifier_contents_)) + sizeof(temperature_));
  // @@protoc_insertion_point(copy_constructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
}

void ActionDataNetworkPackage_ActionDeviceData::SharedCtor() {
  ::memset(&quaternion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temperature_) -
      reinterpret_cast<char*>(&quaternion_)) + sizeof(temperature_));
}

ActionDataNetworkPackage_ActionDeviceData::~ActionDataNetworkPackage_ActionDeviceData() {
  // @@protoc_insertion_point(destructor:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  SharedDtor();
}

void ActionDataNetworkPackage_ActionDeviceData::SharedDtor() {
  if (this != internal_default_instance()) delete quaternion_;
  if (this != internal_default_instance()) delete accelerometer_;
  if (this != internal_default_instance()) delete gyroscope_;
}

void ActionDataNetworkPackage_ActionDeviceData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionDataNetworkPackage_ActionDeviceData::descriptor() {
  ::protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionDataNetworkPackage_ActionDeviceData& ActionDataNetworkPackage_ActionDeviceData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage_ActionDeviceData.base);
  return *internal_default_instance();
}


void ActionDataNetworkPackage_ActionDeviceData::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extra_.Clear();
  if (GetArenaNoVirtual() == NULL && quaternion_ != NULL) {
    delete quaternion_;
  }
  quaternion_ = NULL;
  if (GetArenaNoVirtual() == NULL && accelerometer_ != NULL) {
    delete accelerometer_;
  }
  accelerometer_ = NULL;
  if (GetArenaNoVirtual() == NULL && gyroscope_ != NULL) {
    delete gyroscope_;
  }
  gyroscope_ = NULL;
  ::memset(&device_identifier_contents_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temperature_) -
      reinterpret_cast<char*>(&device_identifier_contents_)) + sizeof(temperature_));
  _internal_metadata_.Clear();
}

bool ActionDataNetworkPackage_ActionDeviceData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 device_identifier_contents = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_identifier_contents_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4 quaternion = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quaternion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 accelerometer = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accelerometer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 gyroscope = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gyroscope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float temperature = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 extra = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  return false;
#undef DO_
}

void ActionDataNetworkPackage_ActionDeviceData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_identifier_contents = 4;
  if (this->device_identifier_contents() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->device_identifier_contents(), output);
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4 quaternion = 5;
  if (this->has_quaternion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_quaternion(), output);
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 accelerometer = 6;
  if (this->has_accelerometer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_accelerometer(), output);
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 gyroscope = 7;
  if (this->has_gyroscope()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_gyroscope(), output);
  }

  // float temperature = 8;
  if (this->temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->temperature(), output);
  }

  // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 extra = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extra_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->extra(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
}

::google::protobuf::uint8* ActionDataNetworkPackage_ActionDeviceData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_identifier_contents = 4;
  if (this->device_identifier_contents() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->device_identifier_contents(), target);
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4 quaternion = 5;
  if (this->has_quaternion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_quaternion(), deterministic, target);
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 accelerometer = 6;
  if (this->has_accelerometer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_accelerometer(), deterministic, target);
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 gyroscope = 7;
  if (this->has_gyroscope()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_gyroscope(), deterministic, target);
  }

  // float temperature = 8;
  if (this->temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->temperature(), target);
  }

  // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 extra = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extra_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->extra(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  return target;
}

size_t ActionDataNetworkPackage_ActionDeviceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 extra = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->extra_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extra(static_cast<int>(i)));
    }
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4 quaternion = 5;
  if (this->has_quaternion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *quaternion_);
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 accelerometer = 6;
  if (this->has_accelerometer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accelerometer_);
  }

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 gyroscope = 7;
  if (this->has_gyroscope()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gyroscope_);
  }

  // uint32 device_identifier_contents = 4;
  if (this->device_identifier_contents() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_identifier_contents());
  }

  // float temperature = 8;
  if (this->temperature() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionDataNetworkPackage_ActionDeviceData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionDataNetworkPackage_ActionDeviceData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionDataNetworkPackage_ActionDeviceData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
    MergeFrom(*source);
  }
}

void ActionDataNetworkPackage_ActionDeviceData::MergeFrom(const ActionDataNetworkPackage_ActionDeviceData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extra_.MergeFrom(from.extra_);
  if (from.has_quaternion()) {
    mutable_quaternion()->::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4::MergeFrom(from.quaternion());
  }
  if (from.has_accelerometer()) {
    mutable_accelerometer()->::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3::MergeFrom(from.accelerometer());
  }
  if (from.has_gyroscope()) {
    mutable_gyroscope()->::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3::MergeFrom(from.gyroscope());
  }
  if (from.device_identifier_contents() != 0) {
    set_device_identifier_contents(from.device_identifier_contents());
  }
  if (from.temperature() != 0) {
    set_temperature(from.temperature());
  }
}

void ActionDataNetworkPackage_ActionDeviceData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionDataNetworkPackage_ActionDeviceData::CopyFrom(const ActionDataNetworkPackage_ActionDeviceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionDataNetworkPackage_ActionDeviceData::IsInitialized() const {
  return true;
}

void ActionDataNetworkPackage_ActionDeviceData::Swap(ActionDataNetworkPackage_ActionDeviceData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionDataNetworkPackage_ActionDeviceData::InternalSwap(ActionDataNetworkPackage_ActionDeviceData* other) {
  using std::swap;
  CastToBase(&extra_)->InternalSwap(CastToBase(&other->extra_));
  swap(quaternion_, other->quaternion_);
  swap(accelerometer_, other->accelerometer_);
  swap(gyroscope_, other->gyroscope_);
  swap(device_identifier_contents_, other->device_identifier_contents_);
  swap(temperature_, other->temperature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionDataNetworkPackage_ActionDeviceData::GetMetadata() const {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionDataNetworkPackage::InitAsDefaultInstance() {
  ::ActionTracer::_ActionDataNetworkPackage_default_instance_._instance.get_mutable()->send_time_ = const_cast< ::ActionTracer::ActionTimestamp*>(
      ::ActionTracer::ActionTimestamp::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionDataNetworkPackage::kSendTimeFieldNumber;
const int ActionDataNetworkPackage::kPacketNumberFieldNumber;
const int ActionDataNetworkPackage::kDeviceDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionDataNetworkPackage::ActionDataNetworkPackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionTracer.ActionDataNetworkPackage)
}
ActionDataNetworkPackage::ActionDataNetworkPackage(const ActionDataNetworkPackage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_data_(from.device_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_send_time()) {
    send_time_ = new ::ActionTracer::ActionTimestamp(*from.send_time_);
  } else {
    send_time_ = NULL;
  }
  packet_number_ = from.packet_number_;
  // @@protoc_insertion_point(copy_constructor:ActionTracer.ActionDataNetworkPackage)
}

void ActionDataNetworkPackage::SharedCtor() {
  ::memset(&send_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packet_number_) -
      reinterpret_cast<char*>(&send_time_)) + sizeof(packet_number_));
}

ActionDataNetworkPackage::~ActionDataNetworkPackage() {
  // @@protoc_insertion_point(destructor:ActionTracer.ActionDataNetworkPackage)
  SharedDtor();
}

void ActionDataNetworkPackage::SharedDtor() {
  if (this != internal_default_instance()) delete send_time_;
}

void ActionDataNetworkPackage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionDataNetworkPackage::descriptor() {
  ::protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionDataNetworkPackage& ActionDataNetworkPackage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_action_5fdefinitions_2eproto::scc_info_ActionDataNetworkPackage.base);
  return *internal_default_instance();
}


void ActionDataNetworkPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionTracer.ActionDataNetworkPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_data_.Clear();
  if (GetArenaNoVirtual() == NULL && send_time_ != NULL) {
    delete send_time_;
  }
  send_time_ = NULL;
  packet_number_ = 0u;
  _internal_metadata_.Clear();
}

bool ActionDataNetworkPackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionTracer.ActionDataNetworkPackage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ActionTracer.ActionTimestamp send_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_send_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 packet_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packet_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData device_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_device_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionTracer.ActionDataNetworkPackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionTracer.ActionDataNetworkPackage)
  return false;
#undef DO_
}

void ActionDataNetworkPackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionTracer.ActionDataNetworkPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ActionTracer.ActionTimestamp send_time = 1;
  if (this->has_send_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_send_time(), output);
  }

  // uint32 packet_number = 2;
  if (this->packet_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->packet_number(), output);
  }

  // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData device_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->device_data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionTracer.ActionDataNetworkPackage)
}

::google::protobuf::uint8* ActionDataNetworkPackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActionTracer.ActionDataNetworkPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ActionTracer.ActionTimestamp send_time = 1;
  if (this->has_send_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_send_time(), deterministic, target);
  }

  // uint32 packet_number = 2;
  if (this->packet_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->packet_number(), target);
  }

  // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData device_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->device_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionTracer.ActionDataNetworkPackage)
  return target;
}

size_t ActionDataNetworkPackage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionTracer.ActionDataNetworkPackage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData device_data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->device_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_data(static_cast<int>(i)));
    }
  }

  // .ActionTracer.ActionTimestamp send_time = 1;
  if (this->has_send_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *send_time_);
  }

  // uint32 packet_number = 2;
  if (this->packet_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packet_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionDataNetworkPackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionTracer.ActionDataNetworkPackage)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionDataNetworkPackage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionDataNetworkPackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionTracer.ActionDataNetworkPackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionTracer.ActionDataNetworkPackage)
    MergeFrom(*source);
  }
}

void ActionDataNetworkPackage::MergeFrom(const ActionDataNetworkPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionTracer.ActionDataNetworkPackage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_data_.MergeFrom(from.device_data_);
  if (from.has_send_time()) {
    mutable_send_time()->::ActionTracer::ActionTimestamp::MergeFrom(from.send_time());
  }
  if (from.packet_number() != 0) {
    set_packet_number(from.packet_number());
  }
}

void ActionDataNetworkPackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionTracer.ActionDataNetworkPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionDataNetworkPackage::CopyFrom(const ActionDataNetworkPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionTracer.ActionDataNetworkPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionDataNetworkPackage::IsInitialized() const {
  return true;
}

void ActionDataNetworkPackage::Swap(ActionDataNetworkPackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionDataNetworkPackage::InternalSwap(ActionDataNetworkPackage* other) {
  using std::swap;
  CastToBase(&device_data_)->InternalSwap(CastToBase(&other->device_data_));
  swap(send_time_, other->send_time_);
  swap(packet_number_, other->packet_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionDataNetworkPackage::GetMetadata() const {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionMessage::InitAsDefaultInstance() {
  ::ActionTracer::_ActionMessage_default_instance_._instance.get_mutable()->data_ = const_cast< ::ActionTracer::ActionDataNetworkPackage*>(
      ::ActionTracer::ActionDataNetworkPackage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionMessage::kActionFieldNumber;
const int ActionMessage::kNameFieldNumber;
const int ActionMessage::kParamFieldNumber;
const int ActionMessage::kBodyConnectionFieldNumber;
const int ActionMessage::kDeviceConnectionFieldNumber;
const int ActionMessage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionMessage::ActionMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_action_5fdefinitions_2eproto::scc_info_ActionMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionTracer.ActionMessage)
}
ActionMessage::ActionMessage(const ActionMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    data_ = new ::ActionTracer::ActionDataNetworkPackage(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&device_connection_) -
    reinterpret_cast<char*>(&action_)) + sizeof(device_connection_));
  // @@protoc_insertion_point(copy_constructor:ActionTracer.ActionMessage)
}

void ActionMessage::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_connection_) -
      reinterpret_cast<char*>(&data_)) + sizeof(device_connection_));
}

ActionMessage::~ActionMessage() {
  // @@protoc_insertion_point(destructor:ActionTracer.ActionMessage)
  SharedDtor();
}

void ActionMessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void ActionMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionMessage::descriptor() {
  ::protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionMessage& ActionMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_action_5fdefinitions_2eproto::scc_info_ActionMessage.base);
  return *internal_default_instance();
}


void ActionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionTracer.ActionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_connection_) -
      reinterpret_cast<char*>(&action_)) + sizeof(device_connection_));
  _internal_metadata_.Clear();
}

bool ActionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionTracer.ActionMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ActionTracer.ActionCommand action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::ActionTracer::ActionCommand >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ActionTracer.ActionMessage.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ActionTracer.ActionBodyConnection body_connection = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_body_connection(static_cast< ::ActionTracer::ActionBodyConnection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ActionTracer.ActionDeviceConnection device_connection = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_device_connection(static_cast< ::ActionTracer::ActionDeviceConnection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ActionTracer.ActionDataNetworkPackage data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionTracer.ActionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionTracer.ActionMessage)
  return false;
#undef DO_
}

void ActionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionTracer.ActionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ActionTracer.ActionCommand action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ActionTracer.ActionMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 param = 3;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->param(), output);
  }

  // .ActionTracer.ActionBodyConnection body_connection = 4;
  if (this->body_connection() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->body_connection(), output);
  }

  // .ActionTracer.ActionDeviceConnection device_connection = 5;
  if (this->device_connection() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->device_connection(), output);
  }

  // .ActionTracer.ActionDataNetworkPackage data = 6;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionTracer.ActionMessage)
}

::google::protobuf::uint8* ActionMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActionTracer.ActionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ActionTracer.ActionCommand action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ActionTracer.ActionMessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 param = 3;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->param(), target);
  }

  // .ActionTracer.ActionBodyConnection body_connection = 4;
  if (this->body_connection() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->body_connection(), target);
  }

  // .ActionTracer.ActionDeviceConnection device_connection = 5;
  if (this->device_connection() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->device_connection(), target);
  }

  // .ActionTracer.ActionDataNetworkPackage data = 6;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionTracer.ActionMessage)
  return target;
}

size_t ActionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionTracer.ActionMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .ActionTracer.ActionDataNetworkPackage data = 6;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .ActionTracer.ActionCommand action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // int32 param = 3;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param());
  }

  // .ActionTracer.ActionBodyConnection body_connection = 4;
  if (this->body_connection() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->body_connection());
  }

  // .ActionTracer.ActionDeviceConnection device_connection = 5;
  if (this->device_connection() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->device_connection());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionTracer.ActionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionTracer.ActionMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionTracer.ActionMessage)
    MergeFrom(*source);
  }
}

void ActionMessage::MergeFrom(const ActionMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionTracer.ActionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    mutable_data()->::ActionTracer::ActionDataNetworkPackage::MergeFrom(from.data());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
  if (from.body_connection() != 0) {
    set_body_connection(from.body_connection());
  }
  if (from.device_connection() != 0) {
    set_device_connection(from.device_connection());
  }
}

void ActionMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionTracer.ActionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionMessage::CopyFrom(const ActionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionTracer.ActionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionMessage::IsInitialized() const {
  return true;
}

void ActionMessage::Swap(ActionMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionMessage::InternalSwap(ActionMessage* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(action_, other->action_);
  swap(param_, other->param_);
  swap(body_connection_, other->body_connection_);
  swap(device_connection_, other->device_connection_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionMessage::GetMetadata() const {
  protobuf_action_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_action_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ActionTracer
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ActionTracer::ActionTimestamp* Arena::CreateMaybeMessage< ::ActionTracer::ActionTimestamp >(Arena* arena) {
  return Arena::CreateInternal< ::ActionTracer::ActionTimestamp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1* Arena::CreateMaybeMessage< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1 >(Arena* arena) {
  return Arena::CreateInternal< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* Arena::CreateMaybeMessage< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3 >(Arena* arena) {
  return Arena::CreateInternal< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* Arena::CreateMaybeMessage< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4 >(Arena* arena) {
  return Arena::CreateInternal< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData* Arena::CreateMaybeMessage< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData >(Arena* arena) {
  return Arena::CreateInternal< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ActionTracer::ActionDataNetworkPackage* Arena::CreateMaybeMessage< ::ActionTracer::ActionDataNetworkPackage >(Arena* arena) {
  return Arena::CreateInternal< ::ActionTracer::ActionDataNetworkPackage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ActionTracer::ActionMessage* Arena::CreateMaybeMessage< ::ActionTracer::ActionMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ActionTracer::ActionMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

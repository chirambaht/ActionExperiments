// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action_definitions.proto

#ifndef PROTOBUF_INCLUDED_action_5fdefinitions_2eproto
#define PROTOBUF_INCLUDED_action_5fdefinitions_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_action_5fdefinitions_2eproto 

namespace protobuf_action_5fdefinitions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_action_5fdefinitions_2eproto
namespace ActionTracer {
class ActionDataNetworkPackage;
class ActionDataNetworkPackageDefaultTypeInternal;
extern ActionDataNetworkPackageDefaultTypeInternal _ActionDataNetworkPackage_default_instance_;
class ActionDataNetworkPackage_ActionDeviceData;
class ActionDataNetworkPackage_ActionDeviceDataDefaultTypeInternal;
extern ActionDataNetworkPackage_ActionDeviceDataDefaultTypeInternal _ActionDataNetworkPackage_ActionDeviceData_default_instance_;
class ActionDataNetworkPackage_ActionDeviceData_ActionData1;
class ActionDataNetworkPackage_ActionDeviceData_ActionData1DefaultTypeInternal;
extern ActionDataNetworkPackage_ActionDeviceData_ActionData1DefaultTypeInternal _ActionDataNetworkPackage_ActionDeviceData_ActionData1_default_instance_;
class ActionDataNetworkPackage_ActionDeviceData_ActionData3;
class ActionDataNetworkPackage_ActionDeviceData_ActionData3DefaultTypeInternal;
extern ActionDataNetworkPackage_ActionDeviceData_ActionData3DefaultTypeInternal _ActionDataNetworkPackage_ActionDeviceData_ActionData3_default_instance_;
class ActionDataNetworkPackage_ActionDeviceData_ActionData4;
class ActionDataNetworkPackage_ActionDeviceData_ActionData4DefaultTypeInternal;
extern ActionDataNetworkPackage_ActionDeviceData_ActionData4DefaultTypeInternal _ActionDataNetworkPackage_ActionDeviceData_ActionData4_default_instance_;
class ActionMessage;
class ActionMessageDefaultTypeInternal;
extern ActionMessageDefaultTypeInternal _ActionMessage_default_instance_;
class ActionTimestamp;
class ActionTimestampDefaultTypeInternal;
extern ActionTimestampDefaultTypeInternal _ActionTimestamp_default_instance_;
}  // namespace ActionTracer
namespace google {
namespace protobuf {
template<> ::ActionTracer::ActionDataNetworkPackage* Arena::CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage>(Arena*);
template<> ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData* Arena::CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage_ActionDeviceData>(Arena*);
template<> ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1* Arena::CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData1>(Arena*);
template<> ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* Arena::CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3>(Arena*);
template<> ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* Arena::CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4>(Arena*);
template<> ::ActionTracer::ActionMessage* Arena::CreateMaybeMessage<::ActionTracer::ActionMessage>(Arena*);
template<> ::ActionTracer::ActionTimestamp* Arena::CreateMaybeMessage<::ActionTracer::ActionTimestamp>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ActionTracer {

enum ActionCommand {
  UNKNOWN = 0,
  START = 1,
  STOP = 2,
  MAPPING = 3,
  UNMAPPING = 4,
  OUTPUT_RATE = 5,
  RESET = 6,
  DATA = 7,
  DISCONNECT = 8,
  ActionCommand_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionCommand_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionCommand_IsValid(int value);
const ActionCommand ActionCommand_MIN = UNKNOWN;
const ActionCommand ActionCommand_MAX = DISCONNECT;
const int ActionCommand_ARRAYSIZE = ActionCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionCommand_descriptor();
inline const ::std::string& ActionCommand_Name(ActionCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionCommand_descriptor(), value);
}
inline bool ActionCommand_Parse(
    const ::std::string& name, ActionCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionCommand>(
    ActionCommand_descriptor(), name, value);
}
enum ActionBodyConnection {
  WAIST = 0,
  RIGHT_BICEP = 1,
  RIGHT_FOREARM = 2,
  RIGHT_HAND = 3,
  LEFT_BICEP = 4,
  LEFT_FOREARM = 5,
  LEFT_HAND = 6,
  CHEST = 7,
  HEAD = 8,
  RIGHT_THIGH = 9,
  RIGHT_KNEE = 10,
  RIGHT_FOOT = 11,
  LEFT_THIGH = 12,
  LEFT_KNEE = 13,
  LEFT_FOOT = 14,
  RIGHT_HIP = 15,
  LEFT_HIP = 16,
  ActionBodyConnection_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionBodyConnection_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionBodyConnection_IsValid(int value);
const ActionBodyConnection ActionBodyConnection_MIN = WAIST;
const ActionBodyConnection ActionBodyConnection_MAX = LEFT_HIP;
const int ActionBodyConnection_ARRAYSIZE = ActionBodyConnection_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionBodyConnection_descriptor();
inline const ::std::string& ActionBodyConnection_Name(ActionBodyConnection value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionBodyConnection_descriptor(), value);
}
inline bool ActionBodyConnection_Parse(
    const ::std::string& name, ActionBodyConnection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionBodyConnection>(
    ActionBodyConnection_descriptor(), name, value);
}
enum ActionDeviceConnection {
  ACT_0 = 0,
  ACT_1 = 1,
  ACT_2 = 2,
  ACT_3 = 3,
  ACT_4 = 4,
  ACT_5 = 5,
  ACT_6 = 6,
  ACT_7 = 7,
  ACT_8 = 8,
  ACT_9 = 9,
  ACT_10 = 10,
  ACT_11 = 11,
  ACT_12 = 12,
  ACT_13 = 13,
  ACT_14 = 14,
  ACT_15 = 15,
  ActionDeviceConnection_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionDeviceConnection_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionDeviceConnection_IsValid(int value);
const ActionDeviceConnection ActionDeviceConnection_MIN = ACT_0;
const ActionDeviceConnection ActionDeviceConnection_MAX = ACT_15;
const int ActionDeviceConnection_ARRAYSIZE = ActionDeviceConnection_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionDeviceConnection_descriptor();
inline const ::std::string& ActionDeviceConnection_Name(ActionDeviceConnection value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionDeviceConnection_descriptor(), value);
}
inline bool ActionDeviceConnection_Parse(
    const ::std::string& name, ActionDeviceConnection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionDeviceConnection>(
    ActionDeviceConnection_descriptor(), name, value);
}
// ===================================================================

class ActionTimestamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActionTracer.ActionTimestamp) */ {
 public:
  ActionTimestamp();
  virtual ~ActionTimestamp();

  ActionTimestamp(const ActionTimestamp& from);

  inline ActionTimestamp& operator=(const ActionTimestamp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionTimestamp(ActionTimestamp&& from) noexcept
    : ActionTimestamp() {
    *this = ::std::move(from);
  }

  inline ActionTimestamp& operator=(ActionTimestamp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionTimestamp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionTimestamp* internal_default_instance() {
    return reinterpret_cast<const ActionTimestamp*>(
               &_ActionTimestamp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ActionTimestamp* other);
  friend void swap(ActionTimestamp& a, ActionTimestamp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionTimestamp* New() const final {
    return CreateMaybeMessage<ActionTimestamp>(NULL);
  }

  ActionTimestamp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionTimestamp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionTimestamp& from);
  void MergeFrom(const ActionTimestamp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionTimestamp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 seconds = 1;
  void clear_seconds();
  static const int kSecondsFieldNumber = 1;
  ::google::protobuf::int64 seconds() const;
  void set_seconds(::google::protobuf::int64 value);

  // int32 nanos = 2;
  void clear_nanos();
  static const int kNanosFieldNumber = 2;
  ::google::protobuf::int32 nanos() const;
  void set_nanos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActionTracer.ActionTimestamp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 seconds_;
  ::google::protobuf::int32 nanos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_action_5fdefinitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionDataNetworkPackage_ActionDeviceData_ActionData1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1) */ {
 public:
  ActionDataNetworkPackage_ActionDeviceData_ActionData1();
  virtual ~ActionDataNetworkPackage_ActionDeviceData_ActionData1();

  ActionDataNetworkPackage_ActionDeviceData_ActionData1(const ActionDataNetworkPackage_ActionDeviceData_ActionData1& from);

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData1& operator=(const ActionDataNetworkPackage_ActionDeviceData_ActionData1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionDataNetworkPackage_ActionDeviceData_ActionData1(ActionDataNetworkPackage_ActionDeviceData_ActionData1&& from) noexcept
    : ActionDataNetworkPackage_ActionDeviceData_ActionData1() {
    *this = ::std::move(from);
  }

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData1& operator=(ActionDataNetworkPackage_ActionDeviceData_ActionData1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionDataNetworkPackage_ActionDeviceData_ActionData1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionDataNetworkPackage_ActionDeviceData_ActionData1* internal_default_instance() {
    return reinterpret_cast<const ActionDataNetworkPackage_ActionDeviceData_ActionData1*>(
               &_ActionDataNetworkPackage_ActionDeviceData_ActionData1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ActionDataNetworkPackage_ActionDeviceData_ActionData1* other);
  friend void swap(ActionDataNetworkPackage_ActionDeviceData_ActionData1& a, ActionDataNetworkPackage_ActionDeviceData_ActionData1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData1* New() const final {
    return CreateMaybeMessage<ActionDataNetworkPackage_ActionDeviceData_ActionData1>(NULL);
  }

  ActionDataNetworkPackage_ActionDeviceData_ActionData1* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionDataNetworkPackage_ActionDeviceData_ActionData1>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData1& from);
  void MergeFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData1& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionDataNetworkPackage_ActionDeviceData_ActionData1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // @@protoc_insertion_point(class_scope:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_action_5fdefinitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionDataNetworkPackage_ActionDeviceData_ActionData3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3) */ {
 public:
  ActionDataNetworkPackage_ActionDeviceData_ActionData3();
  virtual ~ActionDataNetworkPackage_ActionDeviceData_ActionData3();

  ActionDataNetworkPackage_ActionDeviceData_ActionData3(const ActionDataNetworkPackage_ActionDeviceData_ActionData3& from);

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData3& operator=(const ActionDataNetworkPackage_ActionDeviceData_ActionData3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionDataNetworkPackage_ActionDeviceData_ActionData3(ActionDataNetworkPackage_ActionDeviceData_ActionData3&& from) noexcept
    : ActionDataNetworkPackage_ActionDeviceData_ActionData3() {
    *this = ::std::move(from);
  }

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData3& operator=(ActionDataNetworkPackage_ActionDeviceData_ActionData3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionDataNetworkPackage_ActionDeviceData_ActionData3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionDataNetworkPackage_ActionDeviceData_ActionData3* internal_default_instance() {
    return reinterpret_cast<const ActionDataNetworkPackage_ActionDeviceData_ActionData3*>(
               &_ActionDataNetworkPackage_ActionDeviceData_ActionData3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ActionDataNetworkPackage_ActionDeviceData_ActionData3* other);
  friend void swap(ActionDataNetworkPackage_ActionDeviceData_ActionData3& a, ActionDataNetworkPackage_ActionDeviceData_ActionData3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData3* New() const final {
    return CreateMaybeMessage<ActionDataNetworkPackage_ActionDeviceData_ActionData3>(NULL);
  }

  ActionDataNetworkPackage_ActionDeviceData_ActionData3* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionDataNetworkPackage_ActionDeviceData_ActionData3>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData3& from);
  void MergeFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData3& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionDataNetworkPackage_ActionDeviceData_ActionData3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_action_5fdefinitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionDataNetworkPackage_ActionDeviceData_ActionData4 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4) */ {
 public:
  ActionDataNetworkPackage_ActionDeviceData_ActionData4();
  virtual ~ActionDataNetworkPackage_ActionDeviceData_ActionData4();

  ActionDataNetworkPackage_ActionDeviceData_ActionData4(const ActionDataNetworkPackage_ActionDeviceData_ActionData4& from);

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData4& operator=(const ActionDataNetworkPackage_ActionDeviceData_ActionData4& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionDataNetworkPackage_ActionDeviceData_ActionData4(ActionDataNetworkPackage_ActionDeviceData_ActionData4&& from) noexcept
    : ActionDataNetworkPackage_ActionDeviceData_ActionData4() {
    *this = ::std::move(from);
  }

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData4& operator=(ActionDataNetworkPackage_ActionDeviceData_ActionData4&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionDataNetworkPackage_ActionDeviceData_ActionData4& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionDataNetworkPackage_ActionDeviceData_ActionData4* internal_default_instance() {
    return reinterpret_cast<const ActionDataNetworkPackage_ActionDeviceData_ActionData4*>(
               &_ActionDataNetworkPackage_ActionDeviceData_ActionData4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ActionDataNetworkPackage_ActionDeviceData_ActionData4* other);
  friend void swap(ActionDataNetworkPackage_ActionDeviceData_ActionData4& a, ActionDataNetworkPackage_ActionDeviceData_ActionData4& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionDataNetworkPackage_ActionDeviceData_ActionData4* New() const final {
    return CreateMaybeMessage<ActionDataNetworkPackage_ActionDeviceData_ActionData4>(NULL);
  }

  ActionDataNetworkPackage_ActionDeviceData_ActionData4* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionDataNetworkPackage_ActionDeviceData_ActionData4>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData4& from);
  void MergeFrom(const ActionDataNetworkPackage_ActionDeviceData_ActionData4& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionDataNetworkPackage_ActionDeviceData_ActionData4* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float w = 1;
  void clear_w();
  static const int kWFieldNumber = 1;
  float w() const;
  void set_w(float value);

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // float z = 4;
  void clear_z();
  static const int kZFieldNumber = 4;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float w_;
  float x_;
  float y_;
  float z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_action_5fdefinitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionDataNetworkPackage_ActionDeviceData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActionTracer.ActionDataNetworkPackage.ActionDeviceData) */ {
 public:
  ActionDataNetworkPackage_ActionDeviceData();
  virtual ~ActionDataNetworkPackage_ActionDeviceData();

  ActionDataNetworkPackage_ActionDeviceData(const ActionDataNetworkPackage_ActionDeviceData& from);

  inline ActionDataNetworkPackage_ActionDeviceData& operator=(const ActionDataNetworkPackage_ActionDeviceData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionDataNetworkPackage_ActionDeviceData(ActionDataNetworkPackage_ActionDeviceData&& from) noexcept
    : ActionDataNetworkPackage_ActionDeviceData() {
    *this = ::std::move(from);
  }

  inline ActionDataNetworkPackage_ActionDeviceData& operator=(ActionDataNetworkPackage_ActionDeviceData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionDataNetworkPackage_ActionDeviceData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionDataNetworkPackage_ActionDeviceData* internal_default_instance() {
    return reinterpret_cast<const ActionDataNetworkPackage_ActionDeviceData*>(
               &_ActionDataNetworkPackage_ActionDeviceData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ActionDataNetworkPackage_ActionDeviceData* other);
  friend void swap(ActionDataNetworkPackage_ActionDeviceData& a, ActionDataNetworkPackage_ActionDeviceData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionDataNetworkPackage_ActionDeviceData* New() const final {
    return CreateMaybeMessage<ActionDataNetworkPackage_ActionDeviceData>(NULL);
  }

  ActionDataNetworkPackage_ActionDeviceData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionDataNetworkPackage_ActionDeviceData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionDataNetworkPackage_ActionDeviceData& from);
  void MergeFrom(const ActionDataNetworkPackage_ActionDeviceData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionDataNetworkPackage_ActionDeviceData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionDataNetworkPackage_ActionDeviceData_ActionData1 ActionData1;
  typedef ActionDataNetworkPackage_ActionDeviceData_ActionData3 ActionData3;
  typedef ActionDataNetworkPackage_ActionDeviceData_ActionData4 ActionData4;

  // accessors -------------------------------------------------------

  // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 extra = 9;
  int extra_size() const;
  void clear_extra();
  static const int kExtraFieldNumber = 9;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* mutable_extra(int index);
  ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3 >*
      mutable_extra();
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& extra(int index) const;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* add_extra();
  const ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3 >&
      extra() const;

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4 quaternion = 5;
  bool has_quaternion() const;
  void clear_quaternion();
  static const int kQuaternionFieldNumber = 5;
  private:
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4& _internal_quaternion() const;
  public:
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4& quaternion() const;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* release_quaternion();
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* mutable_quaternion();
  void set_allocated_quaternion(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* quaternion);

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 accelerometer = 6;
  bool has_accelerometer() const;
  void clear_accelerometer();
  static const int kAccelerometerFieldNumber = 6;
  private:
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& _internal_accelerometer() const;
  public:
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& accelerometer() const;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* release_accelerometer();
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* mutable_accelerometer();
  void set_allocated_accelerometer(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* accelerometer);

  // .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 gyroscope = 7;
  bool has_gyroscope() const;
  void clear_gyroscope();
  static const int kGyroscopeFieldNumber = 7;
  private:
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& _internal_gyroscope() const;
  public:
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& gyroscope() const;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* release_gyroscope();
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* mutable_gyroscope();
  void set_allocated_gyroscope(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* gyroscope);

  // uint32 device_identifier_contents = 4;
  void clear_device_identifier_contents();
  static const int kDeviceIdentifierContentsFieldNumber = 4;
  ::google::protobuf::uint32 device_identifier_contents() const;
  void set_device_identifier_contents(::google::protobuf::uint32 value);

  // float temperature = 8;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 8;
  float temperature() const;
  void set_temperature(float value);

  // @@protoc_insertion_point(class_scope:ActionTracer.ActionDataNetworkPackage.ActionDeviceData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3 > extra_;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* quaternion_;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* accelerometer_;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* gyroscope_;
  ::google::protobuf::uint32 device_identifier_contents_;
  float temperature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_action_5fdefinitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionDataNetworkPackage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActionTracer.ActionDataNetworkPackage) */ {
 public:
  ActionDataNetworkPackage();
  virtual ~ActionDataNetworkPackage();

  ActionDataNetworkPackage(const ActionDataNetworkPackage& from);

  inline ActionDataNetworkPackage& operator=(const ActionDataNetworkPackage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionDataNetworkPackage(ActionDataNetworkPackage&& from) noexcept
    : ActionDataNetworkPackage() {
    *this = ::std::move(from);
  }

  inline ActionDataNetworkPackage& operator=(ActionDataNetworkPackage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionDataNetworkPackage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionDataNetworkPackage* internal_default_instance() {
    return reinterpret_cast<const ActionDataNetworkPackage*>(
               &_ActionDataNetworkPackage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ActionDataNetworkPackage* other);
  friend void swap(ActionDataNetworkPackage& a, ActionDataNetworkPackage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionDataNetworkPackage* New() const final {
    return CreateMaybeMessage<ActionDataNetworkPackage>(NULL);
  }

  ActionDataNetworkPackage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionDataNetworkPackage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionDataNetworkPackage& from);
  void MergeFrom(const ActionDataNetworkPackage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionDataNetworkPackage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionDataNetworkPackage_ActionDeviceData ActionDeviceData;

  // accessors -------------------------------------------------------

  // repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData device_data = 3;
  int device_data_size() const;
  void clear_device_data();
  static const int kDeviceDataFieldNumber = 3;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData* mutable_device_data(int index);
  ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData >*
      mutable_device_data();
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData& device_data(int index) const;
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData* add_device_data();
  const ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData >&
      device_data() const;

  // .ActionTracer.ActionTimestamp send_time = 1;
  bool has_send_time() const;
  void clear_send_time();
  static const int kSendTimeFieldNumber = 1;
  private:
  const ::ActionTracer::ActionTimestamp& _internal_send_time() const;
  public:
  const ::ActionTracer::ActionTimestamp& send_time() const;
  ::ActionTracer::ActionTimestamp* release_send_time();
  ::ActionTracer::ActionTimestamp* mutable_send_time();
  void set_allocated_send_time(::ActionTracer::ActionTimestamp* send_time);

  // uint32 packet_number = 2;
  void clear_packet_number();
  static const int kPacketNumberFieldNumber = 2;
  ::google::protobuf::uint32 packet_number() const;
  void set_packet_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ActionTracer.ActionDataNetworkPackage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData > device_data_;
  ::ActionTracer::ActionTimestamp* send_time_;
  ::google::protobuf::uint32 packet_number_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_action_5fdefinitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActionTracer.ActionMessage) */ {
 public:
  ActionMessage();
  virtual ~ActionMessage();

  ActionMessage(const ActionMessage& from);

  inline ActionMessage& operator=(const ActionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionMessage(ActionMessage&& from) noexcept
    : ActionMessage() {
    *this = ::std::move(from);
  }

  inline ActionMessage& operator=(ActionMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionMessage* internal_default_instance() {
    return reinterpret_cast<const ActionMessage*>(
               &_ActionMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ActionMessage* other);
  friend void swap(ActionMessage& a, ActionMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionMessage* New() const final {
    return CreateMaybeMessage<ActionMessage>(NULL);
  }

  ActionMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionMessage& from);
  void MergeFrom(const ActionMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .ActionTracer.ActionDataNetworkPackage data = 6;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 6;
  private:
  const ::ActionTracer::ActionDataNetworkPackage& _internal_data() const;
  public:
  const ::ActionTracer::ActionDataNetworkPackage& data() const;
  ::ActionTracer::ActionDataNetworkPackage* release_data();
  ::ActionTracer::ActionDataNetworkPackage* mutable_data();
  void set_allocated_data(::ActionTracer::ActionDataNetworkPackage* data);

  // .ActionTracer.ActionCommand action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::ActionTracer::ActionCommand action() const;
  void set_action(::ActionTracer::ActionCommand value);

  // int32 param = 3;
  void clear_param();
  static const int kParamFieldNumber = 3;
  ::google::protobuf::int32 param() const;
  void set_param(::google::protobuf::int32 value);

  // .ActionTracer.ActionBodyConnection body_connection = 4;
  void clear_body_connection();
  static const int kBodyConnectionFieldNumber = 4;
  ::ActionTracer::ActionBodyConnection body_connection() const;
  void set_body_connection(::ActionTracer::ActionBodyConnection value);

  // .ActionTracer.ActionDeviceConnection device_connection = 5;
  void clear_device_connection();
  static const int kDeviceConnectionFieldNumber = 5;
  ::ActionTracer::ActionDeviceConnection device_connection() const;
  void set_device_connection(::ActionTracer::ActionDeviceConnection value);

  // @@protoc_insertion_point(class_scope:ActionTracer.ActionMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::ActionTracer::ActionDataNetworkPackage* data_;
  int action_;
  ::google::protobuf::int32 param_;
  int body_connection_;
  int device_connection_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_action_5fdefinitions_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ActionTimestamp

// int64 seconds = 1;
inline void ActionTimestamp::clear_seconds() {
  seconds_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ActionTimestamp::seconds() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionTimestamp.seconds)
  return seconds_;
}
inline void ActionTimestamp::set_seconds(::google::protobuf::int64 value) {
  
  seconds_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionTimestamp.seconds)
}

// int32 nanos = 2;
inline void ActionTimestamp::clear_nanos() {
  nanos_ = 0;
}
inline ::google::protobuf::int32 ActionTimestamp::nanos() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionTimestamp.nanos)
  return nanos_;
}
inline void ActionTimestamp::set_nanos(::google::protobuf::int32 value) {
  
  nanos_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionTimestamp.nanos)
}

// -------------------------------------------------------------------

// ActionDataNetworkPackage_ActionDeviceData_ActionData1

// float x = 1;
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData1::clear_x() {
  x_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData_ActionData1::x() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1.x)
  return x_;
}
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData1::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData1.x)
}

// -------------------------------------------------------------------

// ActionDataNetworkPackage_ActionDeviceData_ActionData3

// float x = 1;
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData3::clear_x() {
  x_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData_ActionData3::x() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3.x)
  return x_;
}
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3.x)
}

// float y = 2;
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData3::clear_y() {
  y_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData_ActionData3::y() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3.y)
  return y_;
}
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3.y)
}

// float z = 3;
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData3::clear_z() {
  z_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData_ActionData3::z() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3.z)
  return z_;
}
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3.z)
}

// -------------------------------------------------------------------

// ActionDataNetworkPackage_ActionDeviceData_ActionData4

// float w = 1;
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData4::clear_w() {
  w_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData_ActionData4::w() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4.w)
  return w_;
}
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData4::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4.w)
}

// float x = 2;
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData4::clear_x() {
  x_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData_ActionData4::x() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4.x)
  return x_;
}
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData4::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4.x)
}

// float y = 3;
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData4::clear_y() {
  y_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData_ActionData4::y() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4.y)
  return y_;
}
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData4::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4.y)
}

// float z = 4;
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData4::clear_z() {
  z_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData_ActionData4::z() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4.z)
  return z_;
}
inline void ActionDataNetworkPackage_ActionDeviceData_ActionData4::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4.z)
}

// -------------------------------------------------------------------

// ActionDataNetworkPackage_ActionDeviceData

// uint32 device_identifier_contents = 4;
inline void ActionDataNetworkPackage_ActionDeviceData::clear_device_identifier_contents() {
  device_identifier_contents_ = 0u;
}
inline ::google::protobuf::uint32 ActionDataNetworkPackage_ActionDeviceData::device_identifier_contents() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.device_identifier_contents)
  return device_identifier_contents_;
}
inline void ActionDataNetworkPackage_ActionDeviceData::set_device_identifier_contents(::google::protobuf::uint32 value) {
  
  device_identifier_contents_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.device_identifier_contents)
}

// .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData4 quaternion = 5;
inline bool ActionDataNetworkPackage_ActionDeviceData::has_quaternion() const {
  return this != internal_default_instance() && quaternion_ != NULL;
}
inline void ActionDataNetworkPackage_ActionDeviceData::clear_quaternion() {
  if (GetArenaNoVirtual() == NULL && quaternion_ != NULL) {
    delete quaternion_;
  }
  quaternion_ = NULL;
}
inline const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4& ActionDataNetworkPackage_ActionDeviceData::_internal_quaternion() const {
  return *quaternion_;
}
inline const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4& ActionDataNetworkPackage_ActionDeviceData::quaternion() const {
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* p = quaternion_;
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.quaternion)
  return p != NULL ? *p : *reinterpret_cast<const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4*>(
      &::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData4_default_instance_);
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* ActionDataNetworkPackage_ActionDeviceData::release_quaternion() {
  // @@protoc_insertion_point(field_release:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.quaternion)
  
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* temp = quaternion_;
  quaternion_ = NULL;
  return temp;
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* ActionDataNetworkPackage_ActionDeviceData::mutable_quaternion() {
  
  if (quaternion_ == NULL) {
    auto* p = CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4>(GetArenaNoVirtual());
    quaternion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.quaternion)
  return quaternion_;
}
inline void ActionDataNetworkPackage_ActionDeviceData::set_allocated_quaternion(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData4* quaternion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete quaternion_;
  }
  if (quaternion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quaternion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quaternion, submessage_arena);
    }
    
  } else {
    
  }
  quaternion_ = quaternion;
  // @@protoc_insertion_point(field_set_allocated:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.quaternion)
}

// .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 accelerometer = 6;
inline bool ActionDataNetworkPackage_ActionDeviceData::has_accelerometer() const {
  return this != internal_default_instance() && accelerometer_ != NULL;
}
inline void ActionDataNetworkPackage_ActionDeviceData::clear_accelerometer() {
  if (GetArenaNoVirtual() == NULL && accelerometer_ != NULL) {
    delete accelerometer_;
  }
  accelerometer_ = NULL;
}
inline const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& ActionDataNetworkPackage_ActionDeviceData::_internal_accelerometer() const {
  return *accelerometer_;
}
inline const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& ActionDataNetworkPackage_ActionDeviceData::accelerometer() const {
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* p = accelerometer_;
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.accelerometer)
  return p != NULL ? *p : *reinterpret_cast<const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3*>(
      &::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData3_default_instance_);
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* ActionDataNetworkPackage_ActionDeviceData::release_accelerometer() {
  // @@protoc_insertion_point(field_release:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.accelerometer)
  
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* temp = accelerometer_;
  accelerometer_ = NULL;
  return temp;
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* ActionDataNetworkPackage_ActionDeviceData::mutable_accelerometer() {
  
  if (accelerometer_ == NULL) {
    auto* p = CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3>(GetArenaNoVirtual());
    accelerometer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.accelerometer)
  return accelerometer_;
}
inline void ActionDataNetworkPackage_ActionDeviceData::set_allocated_accelerometer(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* accelerometer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete accelerometer_;
  }
  if (accelerometer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      accelerometer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, accelerometer, submessage_arena);
    }
    
  } else {
    
  }
  accelerometer_ = accelerometer;
  // @@protoc_insertion_point(field_set_allocated:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.accelerometer)
}

// .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 gyroscope = 7;
inline bool ActionDataNetworkPackage_ActionDeviceData::has_gyroscope() const {
  return this != internal_default_instance() && gyroscope_ != NULL;
}
inline void ActionDataNetworkPackage_ActionDeviceData::clear_gyroscope() {
  if (GetArenaNoVirtual() == NULL && gyroscope_ != NULL) {
    delete gyroscope_;
  }
  gyroscope_ = NULL;
}
inline const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& ActionDataNetworkPackage_ActionDeviceData::_internal_gyroscope() const {
  return *gyroscope_;
}
inline const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& ActionDataNetworkPackage_ActionDeviceData::gyroscope() const {
  const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* p = gyroscope_;
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.gyroscope)
  return p != NULL ? *p : *reinterpret_cast<const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3*>(
      &::ActionTracer::_ActionDataNetworkPackage_ActionDeviceData_ActionData3_default_instance_);
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* ActionDataNetworkPackage_ActionDeviceData::release_gyroscope() {
  // @@protoc_insertion_point(field_release:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.gyroscope)
  
  ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* temp = gyroscope_;
  gyroscope_ = NULL;
  return temp;
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* ActionDataNetworkPackage_ActionDeviceData::mutable_gyroscope() {
  
  if (gyroscope_ == NULL) {
    auto* p = CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3>(GetArenaNoVirtual());
    gyroscope_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.gyroscope)
  return gyroscope_;
}
inline void ActionDataNetworkPackage_ActionDeviceData::set_allocated_gyroscope(::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* gyroscope) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gyroscope_;
  }
  if (gyroscope) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gyroscope = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gyroscope, submessage_arena);
    }
    
  } else {
    
  }
  gyroscope_ = gyroscope;
  // @@protoc_insertion_point(field_set_allocated:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.gyroscope)
}

// float temperature = 8;
inline void ActionDataNetworkPackage_ActionDeviceData::clear_temperature() {
  temperature_ = 0;
}
inline float ActionDataNetworkPackage_ActionDeviceData::temperature() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.temperature)
  return temperature_;
}
inline void ActionDataNetworkPackage_ActionDeviceData::set_temperature(float value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.temperature)
}

// repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData.ActionData3 extra = 9;
inline int ActionDataNetworkPackage_ActionDeviceData::extra_size() const {
  return extra_.size();
}
inline void ActionDataNetworkPackage_ActionDeviceData::clear_extra() {
  extra_.Clear();
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* ActionDataNetworkPackage_ActionDeviceData::mutable_extra(int index) {
  // @@protoc_insertion_point(field_mutable:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.extra)
  return extra_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3 >*
ActionDataNetworkPackage_ActionDeviceData::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_list:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.extra)
  return &extra_;
}
inline const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3& ActionDataNetworkPackage_ActionDeviceData::extra(int index) const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.extra)
  return extra_.Get(index);
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3* ActionDataNetworkPackage_ActionDeviceData::add_extra() {
  // @@protoc_insertion_point(field_add:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.extra)
  return extra_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData_ActionData3 >&
ActionDataNetworkPackage_ActionDeviceData::extra() const {
  // @@protoc_insertion_point(field_list:ActionTracer.ActionDataNetworkPackage.ActionDeviceData.extra)
  return extra_;
}

// -------------------------------------------------------------------

// ActionDataNetworkPackage

// .ActionTracer.ActionTimestamp send_time = 1;
inline bool ActionDataNetworkPackage::has_send_time() const {
  return this != internal_default_instance() && send_time_ != NULL;
}
inline void ActionDataNetworkPackage::clear_send_time() {
  if (GetArenaNoVirtual() == NULL && send_time_ != NULL) {
    delete send_time_;
  }
  send_time_ = NULL;
}
inline const ::ActionTracer::ActionTimestamp& ActionDataNetworkPackage::_internal_send_time() const {
  return *send_time_;
}
inline const ::ActionTracer::ActionTimestamp& ActionDataNetworkPackage::send_time() const {
  const ::ActionTracer::ActionTimestamp* p = send_time_;
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.send_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ActionTracer::ActionTimestamp*>(
      &::ActionTracer::_ActionTimestamp_default_instance_);
}
inline ::ActionTracer::ActionTimestamp* ActionDataNetworkPackage::release_send_time() {
  // @@protoc_insertion_point(field_release:ActionTracer.ActionDataNetworkPackage.send_time)
  
  ::ActionTracer::ActionTimestamp* temp = send_time_;
  send_time_ = NULL;
  return temp;
}
inline ::ActionTracer::ActionTimestamp* ActionDataNetworkPackage::mutable_send_time() {
  
  if (send_time_ == NULL) {
    auto* p = CreateMaybeMessage<::ActionTracer::ActionTimestamp>(GetArenaNoVirtual());
    send_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ActionTracer.ActionDataNetworkPackage.send_time)
  return send_time_;
}
inline void ActionDataNetworkPackage::set_allocated_send_time(::ActionTracer::ActionTimestamp* send_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete send_time_;
  }
  if (send_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      send_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, send_time, submessage_arena);
    }
    
  } else {
    
  }
  send_time_ = send_time;
  // @@protoc_insertion_point(field_set_allocated:ActionTracer.ActionDataNetworkPackage.send_time)
}

// uint32 packet_number = 2;
inline void ActionDataNetworkPackage::clear_packet_number() {
  packet_number_ = 0u;
}
inline ::google::protobuf::uint32 ActionDataNetworkPackage::packet_number() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.packet_number)
  return packet_number_;
}
inline void ActionDataNetworkPackage::set_packet_number(::google::protobuf::uint32 value) {
  
  packet_number_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionDataNetworkPackage.packet_number)
}

// repeated .ActionTracer.ActionDataNetworkPackage.ActionDeviceData device_data = 3;
inline int ActionDataNetworkPackage::device_data_size() const {
  return device_data_.size();
}
inline void ActionDataNetworkPackage::clear_device_data() {
  device_data_.Clear();
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData* ActionDataNetworkPackage::mutable_device_data(int index) {
  // @@protoc_insertion_point(field_mutable:ActionTracer.ActionDataNetworkPackage.device_data)
  return device_data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData >*
ActionDataNetworkPackage::mutable_device_data() {
  // @@protoc_insertion_point(field_mutable_list:ActionTracer.ActionDataNetworkPackage.device_data)
  return &device_data_;
}
inline const ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData& ActionDataNetworkPackage::device_data(int index) const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionDataNetworkPackage.device_data)
  return device_data_.Get(index);
}
inline ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData* ActionDataNetworkPackage::add_device_data() {
  // @@protoc_insertion_point(field_add:ActionTracer.ActionDataNetworkPackage.device_data)
  return device_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActionTracer::ActionDataNetworkPackage_ActionDeviceData >&
ActionDataNetworkPackage::device_data() const {
  // @@protoc_insertion_point(field_list:ActionTracer.ActionDataNetworkPackage.device_data)
  return device_data_;
}

// -------------------------------------------------------------------

// ActionMessage

// .ActionTracer.ActionCommand action = 1;
inline void ActionMessage::clear_action() {
  action_ = 0;
}
inline ::ActionTracer::ActionCommand ActionMessage::action() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionMessage.action)
  return static_cast< ::ActionTracer::ActionCommand >(action_);
}
inline void ActionMessage::set_action(::ActionTracer::ActionCommand value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionMessage.action)
}

// string name = 2;
inline void ActionMessage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActionMessage::name() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionMessage.name)
  return name_.GetNoArena();
}
inline void ActionMessage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActionTracer.ActionMessage.name)
}
#if LANG_CXX11
inline void ActionMessage::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActionTracer.ActionMessage.name)
}
#endif
inline void ActionMessage::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActionTracer.ActionMessage.name)
}
inline void ActionMessage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActionTracer.ActionMessage.name)
}
inline ::std::string* ActionMessage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ActionTracer.ActionMessage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionMessage::release_name() {
  // @@protoc_insertion_point(field_release:ActionTracer.ActionMessage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionMessage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ActionTracer.ActionMessage.name)
}

// int32 param = 3;
inline void ActionMessage::clear_param() {
  param_ = 0;
}
inline ::google::protobuf::int32 ActionMessage::param() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionMessage.param)
  return param_;
}
inline void ActionMessage::set_param(::google::protobuf::int32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionMessage.param)
}

// .ActionTracer.ActionBodyConnection body_connection = 4;
inline void ActionMessage::clear_body_connection() {
  body_connection_ = 0;
}
inline ::ActionTracer::ActionBodyConnection ActionMessage::body_connection() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionMessage.body_connection)
  return static_cast< ::ActionTracer::ActionBodyConnection >(body_connection_);
}
inline void ActionMessage::set_body_connection(::ActionTracer::ActionBodyConnection value) {
  
  body_connection_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionMessage.body_connection)
}

// .ActionTracer.ActionDeviceConnection device_connection = 5;
inline void ActionMessage::clear_device_connection() {
  device_connection_ = 0;
}
inline ::ActionTracer::ActionDeviceConnection ActionMessage::device_connection() const {
  // @@protoc_insertion_point(field_get:ActionTracer.ActionMessage.device_connection)
  return static_cast< ::ActionTracer::ActionDeviceConnection >(device_connection_);
}
inline void ActionMessage::set_device_connection(::ActionTracer::ActionDeviceConnection value) {
  
  device_connection_ = value;
  // @@protoc_insertion_point(field_set:ActionTracer.ActionMessage.device_connection)
}

// .ActionTracer.ActionDataNetworkPackage data = 6;
inline bool ActionMessage::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void ActionMessage::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::ActionTracer::ActionDataNetworkPackage& ActionMessage::_internal_data() const {
  return *data_;
}
inline const ::ActionTracer::ActionDataNetworkPackage& ActionMessage::data() const {
  const ::ActionTracer::ActionDataNetworkPackage* p = data_;
  // @@protoc_insertion_point(field_get:ActionTracer.ActionMessage.data)
  return p != NULL ? *p : *reinterpret_cast<const ::ActionTracer::ActionDataNetworkPackage*>(
      &::ActionTracer::_ActionDataNetworkPackage_default_instance_);
}
inline ::ActionTracer::ActionDataNetworkPackage* ActionMessage::release_data() {
  // @@protoc_insertion_point(field_release:ActionTracer.ActionMessage.data)
  
  ::ActionTracer::ActionDataNetworkPackage* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::ActionTracer::ActionDataNetworkPackage* ActionMessage::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::ActionTracer::ActionDataNetworkPackage>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ActionTracer.ActionMessage.data)
  return data_;
}
inline void ActionMessage::set_allocated_data(::ActionTracer::ActionDataNetworkPackage* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:ActionTracer.ActionMessage.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ActionTracer

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ActionTracer::ActionCommand> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ActionTracer::ActionCommand>() {
  return ::ActionTracer::ActionCommand_descriptor();
}
template <> struct is_proto_enum< ::ActionTracer::ActionBodyConnection> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ActionTracer::ActionBodyConnection>() {
  return ::ActionTracer::ActionBodyConnection_descriptor();
}
template <> struct is_proto_enum< ::ActionTracer::ActionDeviceConnection> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ActionTracer::ActionDeviceConnection>() {
  return ::ActionTracer::ActionDeviceConnection_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_action_5fdefinitions_2eproto
